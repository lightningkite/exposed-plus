Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyStarting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:Complete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:Complete.Starting up...Discovered tables:Complete.Starting up...Discovered tables:Complete.Starting up...Discovered tables:Complete.Starting up...Discovered tables:Complete.Starting up...Discovered tables:Complete.Starting up...Discovered tables:Complete.Starting up...Discovered tables:com.lightningkite.exposedplus.Company: Table(name=com.lightningkite.exposedplus.Company, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[])], raw=Company)com.lightningkite.exposedplus.Employee: Table(name=com.lightningkite.exposedplus.Employee, primaryKey=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})])], columns=[Column(name=id, baseType=Long, kotlinType=Long, annotations=[ResolvedAnnotation(type=PrimaryKey, arguments={}), ResolvedAnnotation(type=AutoIncrement, arguments={})]), Column(name=name, baseType=String, kotlinType=String, annotations=[]), Column(name=company, baseType=FK, kotlinType=[typealias FK]<Company>, annotations=[])], raw=Employee)Creating table for CompanyCreating table for EmployeeComplete.Starting up...Starting up...Discovered tables:Complete.